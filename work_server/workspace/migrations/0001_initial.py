# Generated by Django 5.2.4 on 2025-09-27 06:46

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.text
import workspace.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_number', models.CharField(help_text='Введите код (номер) объекта (пр. 1234-56)', max_length=255, verbose_name='Номер объекта')),
                ('created_at', models.DateField(verbose_name='Дата создания объекта')),
                ('deadline', models.DateField(blank=True, help_text='Выберите дату сдачи объекта', null=True, validators=[workspace.models.validate_deadline], verbose_name='Дата сдачи объекта')),
                ('hidden', models.BooleanField(default=False, verbose_name='Скрытие объекта')),
            ],
            options={
                'ordering': ['obj_number'],
            },
        ),
        migrations.CreateModel(
            name='ParseBlacklistValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=256, verbose_name='Игнорируемое значение')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_by', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('recipient_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ObjectState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите состояние объекта', max_length=1024, unique=True, verbose_name='Состояние')),
                ('priority', models.PositiveSmallIntegerField(help_text='Введите приоритет состояния. У объектов будет отображаться состояние с наибольшим приоритетом', unique=True, verbose_name='Приоритет')),
                ('group', models.CharField(choices=[('Payment', 'Оплата'), ('Purchasing', 'Закупка'), ('Processing', 'Работа')], help_text='Выберите категорию, к которой относится состояние', max_length=255, verbose_name='Категория')),
            ],
            options={
                'ordering': ['priority'],
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='state_name_case_insensitive_unique', violation_error_message='Такое состояние уже существует'), models.UniqueConstraint(models.F('priority'), name='state_priority_unique', violation_error_message='Состояние с таким приоритетом уже существует')],
            },
        ),
        migrations.CreateModel(
            name='ObjectStateInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(help_text='Выберите дату добавления состояния', verbose_name='Дата создания')),
                ('object', models.ForeignKey(help_text='Выберите объект, которому принадлежит состояние', on_delete=django.db.models.deletion.CASCADE, to='workspace.object', verbose_name='Объект')),
                ('state', models.ForeignKey(help_text='Выберите состояни(е/я) объекта', on_delete=django.db.models.deletion.CASCADE, to='workspace.objectstate', verbose_name='Состояние')),
            ],
            options={
                'ordering': ['object', 'state'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prod_number', models.CharField(help_text='Введите код (номер) изделия (пр. 01). Полный номер вводить не нужно', max_length=255, verbose_name='Номер изделия')),
                ('name', models.CharField(help_text='Введите название изделия', max_length=1024, verbose_name='Название изделия')),
                ('amount', models.IntegerField(blank=True, default=1, help_text='Введите количество изготавливаемых изделий (не меньше 1)', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Значение должно быть не меньше 1')], verbose_name='Кол-во')),
                ('description', models.TextField(blank=True, help_text='Введите примечание к изделию', max_length=8096, null=True, verbose_name='Примечание')),
                ('price', models.BigIntegerField(default=1, help_text='Введите цену изделия (не меньше 1)', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Значение должно быть не меньше 1')], verbose_name='Стоимость')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.object', verbose_name='Объект, которому принадлежит изделие')),
            ],
            options={
                'ordering': ['object', 'prod_number'],
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название части', max_length=1024, verbose_name='Название части')),
                ('amount', models.IntegerField(blank=True, default=1, help_text='Введите количество частей, используемых в изделии', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Значение должно быть не меньше 1')], verbose_name='Кол-во')),
                ('price', models.DecimalField(decimal_places=2, help_text='Введите сумму, которая будет выплачена работнику за изготовление части', max_digits=12, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Значение должно быть не меньше 1')], verbose_name='Стоимость')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.product')),
            ],
        ),
        migrations.CreateModel(
            name='CreationInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(blank=True, decimal_places=1, default=1, help_text='Введите количество изготавливаемых изделий (не меньше 0.1)', max_digits=10, validators=[django.core.validators.MinValueValidator(limit_value=0.1, message='Значение должно быть не меньше 0.1')], verbose_name='Кол-во')),
                ('status', models.CharField(choices=[('QUEUED', 'QUEUED'), ('IN_WORK', 'IN_WORK'), ('COMPLETED', 'COMPLETED')], max_length=255)),
                ('queued', models.DateTimeField(blank=True, null=True, verbose_name='Дата добавления в очередь')),
                ('started', models.DateField(blank=True, null=True, verbose_name='Дата начала изготовления')),
                ('completed', models.DateField(blank=True, null=True, verbose_name='Дата окончания изготовления')),
                ('part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workspace.part')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workspace.product')),
            ],
            options={
                'ordering': ['queued', 'product', 'part'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quest', models.TextField(help_text='Введите вопрос по поводу изготовления изделия', max_length=2048, verbose_name='Вопрос')),
                ('answer', models.TextField(help_text='Введите ответ на вопрос', max_length=2048, verbose_name='Ответ')),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.creationinstance', verbose_name='Изделие в работе')),
            ],
            options={
                'ordering': ['instance'],
            },
        ),
        migrations.CreateModel(
            name='WorkerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=256, verbose_name='Отображаемое имя')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, validators=[workspace.models.validate_worker], verbose_name='Работник')),
            ],
        ),
        migrations.AddField(
            model_name='creationinstance',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='workspace.workerdata', verbose_name='Работник'),
        ),
    ]
